n <- 100
v <- rnorm(n)
w <- rnorm(n)
p <- 0.95
x[1] <- v[1]
x <- c()
x[1] <- v[1]
for (i in 2:n) {
x[i] <- p*x[i-1] + v[i]
}
y <- c()
for (i in 1:n) {
y[n] <- x[n] + w[n]
}
plot(1:n, y, type="l")
y <- c()
for (i in 1:n) {
y[i] <- x[i] + w[i]
}
plot(1:n, y, type="l")
plot(1:n, y, type="o", pch=1)
plot(1:n, y, type="o", pch=2)
plot(1:n, y, type="o", pch=3)
plot(1:n, y, type="o", pch=4)
plot(1:n, y, type="o", pch=5)
plot(1:n, y, type="o", pch=6)
plot(1:n, y, type="o", pch=7)
plot(1:n, y, type="o", pch=8)
plot(1:n, y, type="o", pch=9)
plot(1:n, y, type="o", pch=10)
plot(1:n, y, type="o", pch=11)
plot(1:n, y, type="o", pch=12)
plot(1:n, y, type="o", pch=13)
plot(1:n, y, type="o", pch=14)
plot(1:n, y, type="o", pch=15)
plot(1:n, y, type="o", pch=16)
plot(1:n, y, type="o", pch=17)
plot(1:n, y, type="o", pch=20)
lines(1:n, x, type="o", pch=20, col="red")
v
K <- 0.95/2
A <- p
n <- 100
v <- rnorm(n)
w <- rnorm(n)
p <- 0.95
x0 <- 0
x[1] <- p*x0 + v[1]
for (i in 2:n) {
x[i] <- p*x[i-1] + v[i]
}
y <- c()
for (i in 1:n) {
y[i] <- x[i] + w[i]
}
plot(1:n, y, type="o", pch=20)
lines(1:n, x, type="o", pch=20, col="red")
n <- 100
v <- rnorm(n)
w <- rnorm(n)
p <- 0.95
x0 <- 0
x[1] <- rnorm(x0,1)
n <- 100
v <- rnorm(n)
w <- rnorm(n)
p <- 0.95
x0 <- 0
x[1] <- rnorm(1,x0,1)
x[1] <- p*x0 + v[1]
for (i in 2:n) {
x[i] <- p*x[i-1] + v[i]
}
y <- c()
for (i in 1:n) {
y[i] <- x[i] + w[i]
}
plot(1:n, y, type="o", pch=20)
lines(1:n, x, type="o", pch=20, col="red")
A <- p
q <- 1
r <- 1
g <- 1
K <- a*1*g/(g*1*g + r)
a <- p
K <- a*1*g/(g*1*g + r)
xhat <- c()
xhat[1] <- a*x0 + K*(y[1]-g*x0)
F <- 0.95
G <- 1
T <- 100
V <- 1
v <- rnorm(t, 0, V)
v <- rnorm(T, 0, V)
W <- 1
w <- rnorm(T, 0, W)
F <- 0.95
G <- 1
m0 <- 0
C0 <- 1
x0 <- rnorm(1, m0, C0)
x <- c()
y <- c()
for (t in 1:T) {
x[t] <- G*x[t-1] + w[t]
y[t] <- F*x[t] + v[t]
}
plot(1:n, y, type="o", pch=20)
plot(1:T, y, type="o", pch=20)
lines(1:T, x, type="o", pch=20, col="red")
t <- 100
t <- 100
V <- 1
v <- rnorm(t, 0, V)
W <- 1
w <- rnorm(t, 0, W)
FF <- 0.95
GG <- 1
m0 <- 0
C0 <- 1
x0 <- rnorm(1, m0, C0)
x <- c()
y <- c()
for (i in 1:t) {
x[i] <- GG*x[i-1] + w[i]
y[i] <- FF*x[i] + v[i]
}
plot(1:t, y, type="o", pch=20)
lines(1:t, x, type="o", pch=20, col="red")
t <- 100
V <- 1
v <- rnorm(t, 0, V)
W <- 1
w <- rnorm(t, 0, W)
v
w
FF <- 0.95
GG <- 1
m0 <- 0
C0 <- 1
x0 <- rnorm(1, m0, C0)
x <- c()
y <- c()
for (i in 1:t) {
if (i==1) {
x[i] <- GG*x0 + w[i]
y[i] <- FF*x[i] + v[i]
} else {
x[i] <- GG*x[i-1] + w[i]
y[i] <- FF*x[i] + v[i]
}
}
plot(1:t, y, type="o", pch=20)
lines(1:t, x, type="o", pch=20, col="red")
install.packages("dlm")
library(dlm)
dlm(FF=FF, V=V, GG=GG, W=W, m0=m0, C0=C0)
dlmFilter(y)
?dlmFilter
mod <- dlm(FF=FF, V=V, GG=GG, W=W, m0=m0, C0=C0)
dlmFilter(y, mod=moc)
dlmFilter(y, mod=mod)
filter <- dlmFilter(y, mod=mod)
t <- 10
V <- 1
v <- rnorm(t, 0, V)
W <- 1
w <- rnorm(t, 0, W)
FF <- 0.95
GG <- 1
m0 <- 0
C0 <- 1
x0 <- rnorm(1, m0, C0)
x <- c()
y <- c()
for (i in 1:t) {
if (i==1) {
x[i] <- GG*x0 + w[i]
y[i] <- FF*x[i] + v[i]
} else {
x[i] <- GG*x[i-1] + w[i]
y[i] <- FF*x[i] + v[i]
}
}
plot(1:t, y, type="o", pch=20)
lines(1:t, x, type="o", pch=20, col="red")
install.packages("dlm")
library(dlm)
mod <- dlm(FF=FF, V=V, GG=GG, W=W, m0=m0, C0=C0)
filter <- dlmFilter(y, mod=mod)
source("~/.active-rstudio-document", echo=TRUE)
?dlmFilter
lines(0:t, filter$m, type="o", pch=20, col="blue")
lines(0:t, filter$a, type="o", pch=20, col="blue")
lines(1:t, filter$a, type="o", pch=20, col="blue")
plot(1:t, y, type="o", pch=20)
lines(1:t, x, type="o", pch=20, col="red")
lines(1:t, filter$a, type="o", pch=20, col="blue")
plot(1:t, y, type="o", pch=20)
lines(1:t, x, type="o", pch=20, col="red")
lines(0:t, filter$m, type="o", pch=20, col="blue")
N <- 1000
X <- c()
X[1] <- rnorm(1, y[1], 1)
X[1] <- rnorm(N, y[1], 1)
X <- matrix(nrow=t, ncol=N)
X
X
X <- matrix(nrow=N, ncol=t)
X
X[,1] <- rnorm(N, y[1], 1)
X
w <- rep(0,1000)
w <- rep(0,N)
for (i in 1:N) {
w[i] <- dnorm(y[1], X[i,1], 1)*dnorm(X[i,1], 0, 1) / dnorm(X[i,1], 0, 1)
}
w
sum(is.na(w))
w.norm <- w/sum(w)
w.norm
X_resample <- matrix(nrow=N, ncol=t)
X_resample[,1] <- sample(X[,1], size=N, replace=T, prob=w.norm)
X_resample
X_resample[,1]
mean(X_resample[,1])
mean(X[,1])
N <- 1000
X <- matrix(nrow=N, ncol=t)
X[,1] <- rnorm(N, y[1], 1)
w <- rep(0,N)
for (i in 1:N) {
w[i] <- dnorm(y[1], X[i,1], 1)*dnorm(X[i,1], 0, 1) / dnorm(X[i,1], y[1], 1)
}
w.norm <- w/sum(w)
X_resample <- matrix(nrow=N, ncol=t)
X_resample[,1] <- sample(X[,1], size=N, replace=T, prob=w.norm)
mean(X[,1])
mean(X_resample[,1])
x[1]
y[1]
N <- 1000
X <- matrix(nrow=N, ncol=t)
X[,1] <- rnorm(N, y[1], 1)
w <- rep(0,N)
for (j in 1:N) {
#likelihood: y1|x1 ~ N(x1,1), prior: x1 ~ N(0,1), proposal: q(x1) ~ N(y1,1)
w[j] <- dnorm(y[1], X[j,1], 1) * dnorm(X[j,1], 0, 1) / dnorm(X[j,1], y[1], 1)
}
w.norm <- w/sum(w)
X_resample <- matrix(nrow=N, ncol=t)
X_resample[,1] <- sample(X[,1], size=N, replace=T, prob=w.norm)
for (i in 2:t) {
X[,i] <- rnorm(N, y[2], 1)
for (j in 1:N) {
#likelihood: yi|xi~N(xi,1), xi|xi-1~N(xi-1,1), q(xi)~N(yi,1)
w[j] <- dnorm(y[i], X[j,i], 1) * dnorm(X[j,i], X_resample[j,i-1], 1) / dnorm(X[j,i], y[i], 1)
}
w.norm <- w/sum(w)
X_resample[,i] <- sample(X[,i], size=N, replace=T, prob=w.norm)
}
X_sample
X
?apply
apply(X,2,mean)
apply(X_resample,2,mean)
lines(1:10,apply(X_resample,2,mean),col="green",pch=20)
lines(1:10,apply(X_resample,2,mean),col="green",pch=20,type="o")
legend("topright", legend=c("True X", "Observed Y", "KF", "SMC"), col=c("Black", "Red", "Blue", "Green"))
legend("topright", legend=c("True X", "Observed Y", "KF", "SMC"), col=c("Black", "Red", "Blue", "Green"), lty=1)
plot(1:t, x, type="o", pch=20)
lines(1:t, y, type="o", pch=20, col="red")
legend("topright", legend=c("True X", "Observed Y", "KF", "SMC"), col=c("Black", "Red", "Blue", "Green"), lty=1)
plot(1:t, x, type="o", pch=20, ylim=c(-4,4))
lines(1:t, y, type="o", pch=20, col="red")
legend("topright", legend=c("True X", "Observed Y", "KF", "SMC"), col=c("Black", "Red", "Blue", "Green"), lty=1)
plot(1:t, x, type="o", pch=20, ylim=c(-4,2))
lines(1:t, y, type="o", pch=20, col="red")
legend("topright", legend=c("True X", "Observed Y", "KF", "SMC"), col=c("Black", "Red", "Blue", "Green"), lty=1)
plot(1:t, x, type="o", pch=20, ylim=c(-4,1))
lines(1:t, y, type="o", pch=20, col="red")
legend("topright", legend=c("True X", "Observed Y", "KF", "SMC"), col=c("Black", "Red", "Blue", "Green"), lty=1)
library(dlm)
mod <- dlm(FF=FF, V=V, GG=GG, W=W, m0=m0, C0=C0)
filter <- dlmFilter(y, mod=mod)
lines(1:t, filter$m[-1], type="o", pch=20, col="blue")
N <- 100
X <- matrix(nrow=N, ncol=t)
X[,1] <- rnorm(N, y[1], 1)
w <- rep(0,N)
for (j in 1:N) {
#likelihood: y1|x1 ~ N(FF*x1,1), prior: x1 ~ N(GG*m0,1), proposal: q(x1) ~ N(GG*y1,1)
w[j] <- dnorm(y[1], FF*X[j,1], 1) * dnorm(X[j,1], GG*m0, 1) / dnorm(X[j,1], GG*y[1], 1)
}
w.norm <- w/sum(w)
X_resample <- matrix(nrow=N, ncol=t)
X_resample[,1] <- sample(X[,1], size=N, replace=T, prob=w.norm)
for (i in 2:t) {
X[,i] <- rnorm(N, y[2], 1)
for (j in 1:N) {
#likelihood: yi|xi~N(FF*xi,1), xi|xi-1~N(GG*xi-1,1), q(xi)~N(GG*yi,1)
w[j] <- dnorm(y[i], FF*X[j,i], 1) * dnorm(X[j,i], GG*X_resample[j,i-1], 1) / dnorm(X[j,i], GG*y[i], 1)
}
w.norm <- w/sum(w)
X_resample[,i] <- sample(X[,i], size=N, replace=T, prob=w.norm)
}
lines(1:t, apply(X_resample,2,mean),type="o",pch=20,col="green")
t <- 10
V <- 1
v <- rnorm(t, 0, V)
W <- 1
w <- rnorm(t, 0, W)
FF <- 0.95
GG <- 1
m0 <- 0
C0 <- 1
x0 <- rnorm(1, m0, C0)
x <- c()
y <- c()
for (i in 1:t) {
if (i==1) {
x[i] <- GG*x0 + w[i]
y[i] <- FF*x[i] + v[i]
} else {
x[i] <- GG*x[i-1] + w[i]
y[i] <- FF*x[i] + v[i]
}
}
plot(1:t, x, type="o", pch=20, ylim=c(-4,1))
lines(1:t, y, type="o", pch=20, col="red")
plot(1:t, x, type="o", pch=20, ylim=c(-4,4))
lines(1:t, y, type="o", pch=20, col="red")
legend("topright", legend=c("True X", "Observed Y", "KF", "SMC"), col=c("Black", "Red", "Blue", "Green"), lty=1)
plot(1:t, x, type="o", pch=20, ylim=c(-4,4))
lines(1:t, y, type="o", pch=20, col="red")
legend("topleft", legend=c("True X", "Observed Y", "KF", "SMC"), col=c("Black", "Red", "Blue", "Green"), lty=1)
library(dlm)
mod <- dlm(FF=FF, V=V, GG=GG, W=W, m0=m0, C0=C0)
filter <- dlmFilter(y, mod=mod)
lines(1:t, filter$m[-1], type="o", pch=20, col="blue")
N <- 100
X <- matrix(nrow=N, ncol=t)
X[,1] <- rnorm(N, y[1], 1)
w <- rep(0,N)
for (j in 1:N) {
#likelihood: y1|x1 ~ N(FF*x1,1), prior: x1 ~ N(GG*m0,1), proposal: q(x1) ~ N(GG*y1,1)
w[j] <- dnorm(y[1], FF*X[j,1], 1) * dnorm(X[j,1], GG*m0, 1) / dnorm(X[j,1], GG*y[1], 1)
}
w.norm <- w/sum(w)
X_resample <- matrix(nrow=N, ncol=t)
X_resample[,1] <- sample(X[,1], size=N, replace=T, prob=w.norm)
X[,1]
mean(X[,1])
x[1]
mean(X_resample[,1])
N <- 1000
X <- matrix(nrow=N, ncol=t)
X[,1] <- rnorm(N, y[1], 1)
w <- rep(0,N)
for (j in 1:N) {
#likelihood: y1|x1 ~ N(FF*x1,1), prior: x1 ~ N(GG*m0,1), proposal: q(x1) ~ N(GG*y1,1)
w[j] <- dnorm(y[1], FF*X[j,1], 1) * dnorm(X[j,1], GG*m0, 1) / dnorm(X[j,1], GG*y[1], 1)
}
w.norm <- w/sum(w)
X_resample <- matrix(nrow=N, ncol=t)
X_resample[,1] <- sample(X[,1], size=N, replace=T, prob=w.norm)
x[1]
mean(X[,1])
mean(X_resample[,1])
N <- 1000
X <- matrix(nrow=N, ncol=t)
X[,1] <- rnorm(N, FF*y[1], 1)
w <- rep(0,N)
for (j in 1:N) {
#likelihood: y1|x1 ~ N(FF*x1,1), prior: x1 ~ N(GG*m0,1), proposal: q(x1) ~ N(GG*y1,1)
w[j] <- dnorm(y[1], FF*X[j,1], 1) * dnorm(X[j,1], GG*m0, 1) / dnorm(X[j,1], GG*y[1], 1)
}
w.norm <- w/sum(w)
X_resample <- matrix(nrow=N, ncol=t)
X_resample[,1] <- sample(X[,1], size=N, replace=T, prob=w.norm)
x[1]
mean(X[,1])
mean(X_resample[,1])
for (i in 2:t) {
X[,i] <- rnorm(N, FF*y[i], 1)
for (j in 1:N) {
#likelihood: yi|xi~N(FF*xi,1), xi|xi-1~N(GG*xi-1,1), q(xi)~N(GG*yi,1)
w[j] <- dnorm(y[i], FF*X[j,i], 1) * dnorm(X[j,i], GG*X_resample[j,i-1], 1) / dnorm(X[j,i], GG*y[i], 1)
}
w.norm <- w/sum(w)
X_resample[,i] <- sample(X[,i], size=N, replace=T, prob=w.norm)
}
lines(1:t, apply(X_resample,2,mean),type="o",pch=20,col="green")
usethis::use_r("linear gaussian smc.R")
usethis::use_r("linear_gaussian_smc.R")
t <- 100
V <- 1
v <- rnorm(t, 0, V)
W <- 1
w <- rnorm(t, 0, W)
FF <- 0.95
GG <- 1
m0 <- 0
C0 <- 1
x0 <- rnorm(1, m0, C0)
x <- c()
y <- c()
for (i in 1:t) {
if (i==1) {
x[i] <- GG*x0 + w[i]
y[i] <- FF*x[i] + v[i]
} else {
x[i] <- GG*x[i-1] + w[i]
y[i] <- FF*x[i] + v[i]
}
}
plot(1:t, x, type="o", pch=20, ylim=c(-4,4))
lines(1:t, y, type="o", pch=20, col="red")
legend("topleft", legend=c("True X", "Observed Y", "KF", "SMC"), col=c("Black", "Red", "Blue", "Green"), lty=1)
library(dlm)
mod <- dlm(FF=FF, V=V, GG=GG, W=W, m0=m0, C0=C0)
filter <- dlmFilter(y, mod=mod)
lines(1:t, filter$m[-1], type="o", pch=20, col="blue")
N <- 1000
X <- matrix(nrow=N, ncol=t)
X[,1] <- rnorm(N, FF*y[1], 1)
w <- rep(0,N)
for (j in 1:N) {
#likelihood: y1|x1 ~ N(FF*x1,1), prior: x1 ~ N(GG*m0,1), proposal: q(x1) ~ N(GG*y1,1)
w[j] <- dnorm(y[1], FF*X[j,1], 1) * dnorm(X[j,1], GG*m0, 1) / dnorm(X[j,1], GG*y[1], 1)
}
w.norm <- w/sum(w)
X_resample <- matrix(nrow=N, ncol=t)
X_resample[,1] <- sample(X[,1], size=N, replace=T, prob=w.norm)
for (i in 2:t) {
X[,i] <- rnorm(N, FF*y[i], 1)
for (j in 1:N) {
#likelihood: yi|xi~N(FF*xi,1), xi|xi-1~N(GG*xi-1,1), q(xi)~N(GG*yi,1)
w[j] <- dnorm(y[i], FF*X[j,i], 1) * dnorm(X[j,i], GG*X_resample[j,i-1], 1) / dnorm(X[j,i], GG*y[i], 1)
}
w.norm <- w/sum(w)
X_resample[,i] <- sample(X[,i], size=N, replace=T, prob=w.norm)
}
lines(1:t, apply(X_resample,2,mean),type="o",pch=20,col="green")
plot(1:t, x, type="o", pch=20, ylim=c(min(x,y),max(x,y)))
lines(1:t, y, type="o", pch=20, col="red")
legend("topright", legend=c("True X", "Observed Y", "KF", "SMC"), col=c("Black", "Red", "Blue", "Green"), lty=1)
library(dlm)
mod <- dlm(FF=FF, V=V, GG=GG, W=W, m0=m0, C0=C0)
filter <- dlmFilter(y, mod=mod)
lines(1:t, filter$m[-1], type="o", pch=20, col="blue")
N <- 1000
X <- matrix(nrow=N, ncol=t)
X[,1] <- rnorm(N, FF*y[1], 1)
w <- rep(0,N)
for (j in 1:N) {
#likelihood: y1|x1 ~ N(FF*x1,1), prior: x1 ~ N(GG*m0,1), proposal: q(x1) ~ N(GG*y1,1)
w[j] <- dnorm(y[1], FF*X[j,1], 1) * dnorm(X[j,1], GG*m0, 1) / dnorm(X[j,1], GG*y[1], 1)
}
w.norm <- w/sum(w)
X_resample <- matrix(nrow=N, ncol=t)
X_resample[,1] <- sample(X[,1], size=N, replace=T, prob=w.norm)
for (i in 2:t) {
X[,i] <- rnorm(N, FF*y[i], 1)
for (j in 1:N) {
#likelihood: yi|xi~N(FF*xi,1), xi|xi-1~N(GG*xi-1,1), q(xi)~N(GG*yi,1)
w[j] <- dnorm(y[i], FF*X[j,i], 1) * dnorm(X[j,i], GG*X_resample[j,i-1], 1) / dnorm(X[j,i], GG*y[i], 1)
}
w.norm <- w/sum(w)
X_resample[,i] <- sample(X[,i], size=N, replace=T, prob=w.norm)
}
lines(1:t, apply(X_resample,2,mean),type="o",pch=20,col="green")
devtools::load_all()
